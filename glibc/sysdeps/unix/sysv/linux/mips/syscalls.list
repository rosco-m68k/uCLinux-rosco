# File name	Caller	Syscall name	Args	Strong name	Weak names

#
# Calls for compatibility with existing MIPS OS implementations and
# compilers.
#
cachectl	-	cachectl	i:pii	__cachectl	cachectl
cacheflush	-	cacheflush	i:pii	_flush_cache	cacheflush
sysmips		-	sysmips		i:iiii	__sysmips	sysmips

s_sigsuspend	sigsuspend sigsuspend	i:p	__syscall_sigsuspend

#
# Socket functions; Linux/MIPS doesn't use the socketcall(2) wrapper;
# it's provided for compatibility, though.
#
accept		-	accept		i:iBN	__libc_accept	__accept accept
bind		-	bind		i:ipi	__bind		bind
connect		-	connect		i:ipi	__libc_connect	__connect connect
getpeername	-	getpeername	i:ipp	__getpeername	getpeername
getsockname	-	getsockname	i:ipp	__getsockname	getsockname
getsockopt	-	getsockopt	i:iiiBN	__getsockopt	getsockopt
listen		-	listen		i:ii	__listen	listen
recv		-	recv		i:ibni	__libc_recv	__recv recv
recvfrom	-	recvfrom	i:ibniBN __libc_recvfrom __recvfrom recvfrom
recvmsg		-	recvmsg		i:ipi	__libc_recvmsg	__recvmsg recvmsg
send		-	send		i:ibni	__libc_send	__send send
sendmsg		-	sendmsg		i:ipi	__libc_sendmsg	__sendmsg sendmsg
sendto		-	sendto		i:ibnibn __libc_sendto	__sendto sendto
setsockopt	-	setsockopt	i:iiibn	__setsockopt	setsockopt
shutdown	-	shutdown	i:ii	__shutdown	shutdown
socket		-	socket		i:iii	__socket	socket
socketpair	-	socketpair	i:iiif	__socketpair	socketpair

#
# These are defined locally because the caller is also defined in this dir.
#
s_llseek	llseek	_llseek		i:iiipi	__syscall__llseek
s_sigaction	sigaction sigaction	i:ipp	__syscall_sigaction
s_ustat		ustat	ustat		i:ip	__syscall_ustat
sys_mknod	xmknod	mknod		i:sii	__syscall_mknod

# System calls with wrappers.
rt_sigaction	-	rt_sigaction	i:ippi	__syscall_rt_sigaction
rt_sigpending	-	rt_sigpending	i:pi	__syscall_rt_sigpending
rt_sigprocmask	-	rt_sigprocmask	i:ippi	__syscall_rt_sigprocmask
rt_sigqueueinfo	-	rt_sigqueueinfo	i:iip	__syscall_rt_sigqueueinfo
rt_sigsuspend	-	rt_sigsuspend	i:pi	__syscall_rt_sigsuspend
rt_sigtimedwait	-	rt_sigtimedwait	i:pppi	__syscall_rt_sigtimedwait
s_execve	execve	execve		i:spp	__syscall_execve
s_fcntl		fcntl	fcntl		i:iiF	__syscall_fcntl
s_fcntl64	fcntl64	fcntl64		i:iiF	__syscall_fcntl64
s_fstat64	fxstat64 fstat64	i:ip	__syscall_fstat64
s_ftruncate64	ftruncate64 ftruncate64	i:iiii	__syscall_ftruncate64
s_getcwd	getcwd	getcwd		i:pi	__syscall_getcwd
s_getdents	getdents getdents	i:ipi	__syscall_getdents
s_getdents64	getdents getdents64	i:ipi	__syscall_getdents64
s_getpmsg	getpmsg	getpmsg		i:ipppp	__syscall_getpmsg
s_getpriority	getpriority getpriority	i:ii	__syscall_getpriority
getresgid	-	getresgid	i:ppp	getresgid
getresuid	-	getresuid	i:ppp	getresuid
s_ipc		msgget	ipc		i:iiiip	__syscall_ipc
s_lstat64	lxstat64 lstat64	i:sp	__syscall_lstat64
s_mmap2		mmap64	mmap2		b:aniiii __syscall_mmap2
s_poll		poll	poll		i:pii	__syscall_poll
s_pread64	pread64	pread		i:ibniii __syscall_pread
s_putpmsg	putpmsg	putpmsg		i:ippii	__syscall_putpmsg
s_ptrace	ptrace	ptrace		i:iipp	__syscall_ptrace
s_pwrite64	pwrite64 pwrite		i:ibniii __syscall_pwrite
s_reboot	reboot	reboot		i:iii	__syscall_reboot
s_setrlimit	setrlimit setrlimit	i:ip	__syscall_setrlimit
s_sigpending	sigpending sigpending	i:p	__syscall_sigpending
s_sigprocmask	sigprocmask sigprocmask	i:ipp	__syscall_sigprocmask
s_stat64	xstat64  stat64		i:sp	__syscall_stat64
s_truncate64	truncate64 truncate64	i:siii	__syscall_truncate64

# Todo: we can pass 6 args in registers, no need for the wrapper
sys_sysctl	sysctl	_sysctl		i:p	__syscall__sysctl
sys_fstat	fxstat	fstat		i:ip	__syscall_fstat
sys_lstat	lxstat	lstat		i:sp	__syscall_lstat
sys_readv	readv	readv		i:ipi	__syscall_readv
sys_stat	xstat	stat		i:sp	__syscall_stat
sys_writev	writev	writev		i:ipi	__syscall_writev
