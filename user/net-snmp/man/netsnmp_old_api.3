.TH "old_api: Calls mib module code written in the old style of code." 3 "5 Sep 2003" "net-snmp" \" -*- nroff -*-
.ad l
.nh
.SH NAME
old_api: Calls mib module code written in the old style of code. \- This is a backwards compatilibity module that allows code written in the old API to be run under the new handler based architecture. 
More...
.SS "Functions"

.in +1c
.ti -1c
.RI "netsnmp_mib_handler * \fBget_old_api_handler\fP (void)"
.br
.RI "\fIreturns a old_api handler that should be the final calling handler.\fP"
.ti -1c
.RI "int \fBnetsnmp_register_old_api\fP (const char *moduleName, struct variable *var, size_t varsize, size_t numvars, oid *mibloc, size_t mibloclen, int priority, int range_subid, oid range_ubound, netsnmp_session *ss, const char *context, int timeout, int flags)"
.br
.RI "\fIRegisters an old API set into the mib tree.\fP"
.ti -1c
.RI "int \fBnetsnmp_register_mib_table_row\fP (const char *moduleName, struct variable *var, size_t varsize, size_t numvars, oid *mibloc, size_t mibloclen, int priority, int var_subid, netsnmp_session *ss, const char *context, int timeout, int flags)"
.br
.RI "\fIregisters a row within a mib table\fP"
.ti -1c
.RI "int \fBnetsnmp_old_api_helper\fP (netsnmp_mib_handler *handler, netsnmp_handler_registration *reginfo, netsnmp_agent_request_info *reqinfo, netsnmp_request_info *requests)"
.br
.RI "\fIimplements the old_api handler\fP"
.in -1c
.SH "DETAILED DESCRIPTION"
.PP 
This is a backwards compatilibity module that allows code written in the old API to be run under the new handler based architecture.
.PP
Use it by calling \fBnetsnmp_register_old_api()\fP. 
.SH "FUNCTION DOCUMENTATION"
.PP 
.SS "netsnmp_mib_handler* get_old_api_handler (void)"
.PP
returns a old_api handler that should be the final calling handler.
.PP
Don't use this function. Use the \fBnetsnmp_register_old_api()\fP function instead. 
.PP
Definition at line 40 of file old_api.c.
.PP
References netsnmp_create_handler(), and netsnmp_old_api_helper().
.PP
Referenced by netsnmp_register_mib_table_row(), and netsnmp_register_old_api().
.SS "int netsnmp_old_api_helper (netsnmp_mib_handler * handler, netsnmp_handler_registration * reginfo, netsnmp_agent_request_info * reqinfo, netsnmp_request_info * requests)"
.PP
implements the old_api handler
.PP
Definition at line 224 of file old_api.c.
.PP
References netsnmp_oid_equals(), netsnmp_request_add_list_data(), and netsnmp_request_get_list_data().
.PP
Referenced by get_old_api_handler().
.SS "int netsnmp_register_mib_table_row (const char * moduleName, struct variable * var, size_t varsize, size_t numvars, oid * mibloc, size_t mibloclen, int priority, int var_subid, netsnmp_session * ss, const char * context, int timeout, int flags)"
.PP
registers a row within a mib table
.PP
Definition at line 110 of file old_api.c.
.PP
References get_old_api_handler(), netsnmp_handler_registration_free(), and netsnmp_register_handler_nocallback().
.SS "int netsnmp_register_old_api (const char * moduleName, struct variable * var, size_t varsize, size_t numvars, oid * mibloc, size_t mibloclen, int priority, int range_subid, oid range_ubound, netsnmp_session * ss, const char * context, int timeout, int flags)"
.PP
Registers an old API set into the mib tree.
.PP
Functionally this mimics the old \fBregister_mib_context()\fP function (and in fact the new \fBregister_mib_context()\fP function merely calls this new old_api one). 
.PP
Definition at line 51 of file old_api.c.
.PP
References get_old_api_handler(), netsnmp_handler_registration_free(), and netsnmp_register_handler().
